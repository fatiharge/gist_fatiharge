<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2024-11-02T16:07:46+00:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">FatihargeGist</title><subtitle>A platform for sharing small yet impactful notes that inspire creativity.</subtitle><author><name>fatiharge</name></author><entry><title type="html">Flutter ile Basit Sayfalandırma Oluşturma</title><link href="http://localhost:4000/flutter/2024/11/02/Flutter-ile-Basit-Sayfaland%C4%B1rma-Olu%C5%9Fturma.html" rel="alternate" type="text/html" title="Flutter ile Basit Sayfalandırma Oluşturma" /><published>2024-11-02T00:00:00+00:00</published><updated>2024-11-02T00:00:00+00:00</updated><id>http://localhost:4000/flutter/2024/11/02/Flutter%20ile%20Basit%20Sayfaland%C4%B1rma%20Olu%C5%9Fturma</id><content type="html" xml:base="http://localhost:4000/flutter/2024/11/02/Flutter-ile-Basit-Sayfaland%C4%B1rma-Olu%C5%9Fturma.html"><![CDATA[<h1 id="flutter-ile-basit-sayfalandırma-oluşturma">Flutter ile Basit Sayfalandırma Oluşturma</h1>

<h3 id="sayfalandırmanın-temelleri">Sayfalandırmanın Temelleri</h3>

<p>Flutter uygulamalarında sayfalandırma, büyük veri setlerini yönetmek için önemli bir tekniktir. Sayfalandırma, kullanıcı deneyimini geliştirir ve uygulamanın performansını artırır. Bu yazıda, Flutter kullanarak nasıl basit bir sayfalandırma oluşturabileceğinizi öğreneceksiniz.</p>

<h3 id="gerekli-paketler">Gerekli Paketler</h3>

<p>Flutter’da sayfalandırma uygulamak için <code class="language-plaintext highlighter-rouge">flutter_pagination_helper</code> paketini kullanacağız.</p>

<h3 id="örnek-uygulama">Örnek Uygulama</h3>

<p>Aşağıda, basit bir sayfalandırma uygulaması oluşturan Flutter kodu yer almaktadır:</p>

<div class="language-dart highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="s">'package:flutter/material.dart'</span><span class="o">;</span>
<span class="kn">import</span> <span class="s">'package:flutter_pagination_helper/flutter_pagination_helper.dart'</span><span class="o">;</span>

<span class="kt">void</span> <span class="nf">main</span><span class="p">(</span><span class="o">)</span> <span class="o">{</span>
  <span class="n">runApp</span><span class="o">(</span><span class="n">MyApp</span><span class="o">());</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">MyApp</span> <span class="kd">extends</span> <span class="n">StatelessWidget</span> <span class="o">{</span>
  <span class="nd">@override</span>
  <span class="n">Widget</span> <span class="n">build</span><span class="o">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">MaterialApp</span><span class="o">(</span>
      <span class="nl">title:</span> <span class="s">'Flutter Pagination Example'</span><span class="o">,</span>
      <span class="nl">home:</span> <span class="n">PaginationExample</span><span class="o">(),</span>
    <span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="kd">class</span> <span class="nc">PaginationExample</span> <span class="kd">extends</span> <span class="n">StatelessWidget</span> <span class="o">{</span>
  <span class="kd">final</span> <span class="kt">List</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">&gt;</span> <span class="n">items</span> <span class="o">=</span> <span class="kt">List</span><span class="o">.</span><span class="na">generate</span><span class="o">(</span><span class="mi">100</span><span class="o">,</span> <span class="o">(</span><span class="n">index</span><span class="o">)</span> <span class="o">=&gt;</span> <span class="s">'Item </span><span class="si">$index</span><span class="s">'</span><span class="o">);</span>

  <span class="nd">@override</span>
  <span class="n">Widget</span> <span class="n">build</span><span class="o">(</span><span class="n">BuildContext</span> <span class="n">context</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">Scaffold</span><span class="o">(</span>
      <span class="nl">appBar:</span> <span class="n">AppBar</span><span class="o">(</span>
        <span class="nl">title:</span> <span class="n">Text</span><span class="o">(</span><span class="s">'Pagination Example'</span><span class="o">),</span>
      <span class="o">),</span>
      <span class="nl">body:</span> <span class="n">PaginationHelper</span><span class="o">&lt;</span><span class="kt">String</span><span class="o">&gt;(</span>
        <span class="nl">items:</span> <span class="n">items</span><span class="o">,</span>
        <span class="nl">pageSize:</span> <span class="mi">10</span><span class="o">,</span>
        <span class="nl">itemBuilder:</span> <span class="o">(</span><span class="n">context</span><span class="o">,</span> <span class="n">item</span><span class="o">)</span> <span class="o">{</span>
          <span class="k">return</span> <span class="n">ListTile</span><span class="o">(</span>
            <span class="nl">title:</span> <span class="n">Text</span><span class="o">(</span><span class="n">item</span><span class="o">),</span>
          <span class="o">);</span>
        <span class="o">},</span>
        <span class="nl">onLoadMore:</span> <span class="o">()</span> <span class="o">{</span>
          <span class="c1">// Buraya veri yükleme işlemi ekleyebilirsiniz</span>
        <span class="o">},</span>
      <span class="o">),</span>
    <span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<h3 id="nasıl-çalışır">Nasıl Çalışır?</h3>

<p>Bu kod parçası, <code class="language-plaintext highlighter-rouge">PaginationHelper</code> kullanarak 100 öğeden oluşan bir listeyi 10’ar 10’ar gösterir. <code class="language-plaintext highlighter-rouge">itemBuilder</code> fonksiyonu, her bir öğe için nasıl bir liste görünümü oluşturulacağını tanımlar.</p>

<h3 id="verilerin-yüklenmesi">Verilerin Yüklenmesi</h3>

<p><code class="language-plaintext highlighter-rouge">onLoadMore</code> fonksiyonu, yeni verilerin yükleneceği yerdir. Burada, daha fazla veri almak için bir API çağrısı yapabilir veya mevcut veriyi genişletebilirsiniz.</p>

<h2 id="sonuç">Sonuç</h2>

<p>Flutter ile basit bir sayfalandırma sistemi oluşturmak oldukça kolaydır. Bu temel örnekle başlayarak daha karmaşık sayfalandırma sistemleri geliştirebilirsiniz. Uygulamanızda verimli bir kullanıcı deneyimi sağlamak için sayfalandırmayı kullanmayı unutmayın!</p>]]></content><author><name>fatiharge</name></author><category term="flutter" /><summary type="html"><![CDATA[Flutter ile Basit Sayfalandırma Oluşturma]]></summary></entry></feed>